SET SCHEMA FN71737;

--########TASK 1#########--
--USERS(USERNAME, NAME, PASSWORD, EMAIL)

CREATE TABLE USERS(
	USERNAME VARCHAR(20) NOT NULL PRIMARY KEY,
	PASSWORD CHAR(32),
	NAME VARCHAR(100),
	EMAIL VARCHAR(20)
);

--CATEGORY(ID, NAME)

CREATE TABLE CATEGORY(
	ID INT NOT NULL PRIMARY KEY, -- < 1000?
	NAME VARCHAR(50)
);

ALTER TABLE CATEGORY
ADD CONSTRAINT CK_LESS_1000
CHECK (ID < 1000);

--MOVIES(ID,TITLE,DESCR.,IDCAT)

CREATE TABLE MOVIES(
	ID CHAR(32) NOT NULL PRIMARY KEY,
	TITLE VARCHAR(50),
	DESCRIPTION VARCHAR(100),
	ID_CATEGORY INT REFERENCES CATEGORY(ID)
);

--DOWNLOAD(USERNAME, IDMOVIE, DATE, IP)

CREATE TABLE DOWNLOAD(
	USERNAME VARCHAR(20) NOT NULL REFERENCES USERS(USERNAME),
	ID_MOVIE CHAR(32) NOT NULL REFERENCES MOVIES(ID),
	IP CHAR(16),
	DDATE DATE,
	PRIMARY KEY(USERNAME, ID_MOVIE)
);


INSERT INTO USERS(USERNAME, PASSWORD, NAME, EMAIL)
VALUES ('John', 'A', 'John Doe', 'john@uni-sofia.bg');

SELECT * FROM USERS;

INSERT INTO CATEGORY(ID, NAME)
VALUES (1,'Comedy');

UPDATE USERS
SET EMAIL = 'john@abv.bg'
WHERE USERNAME = 'John';

DELETE FROM USERS
WHERE USERNAME = 'John';

--########TASK 2#########--
--DOCTORS(PID, FNAME, LNAME, ROOM, ID-PROFILE)

CREATE TABLE DOCTORS(
	PID CHAR(15) NOT NULL PRIMARY KEY,
	FNAME VARCHAR(20),
	LNAME VARCHAR(20),
	ROOM INT CHECK (ROOM >= 100 AND ROOM <= 999),
	ID_PROFILE INT --FK
);

--PROFILES(ID, NAME)
CREATE TABLE PROFILES(
	ID INT NOT NULL PRIMARY KEY,
	NAME VARCHAR(50)
);

ALTER TABLE DOCTORS
ADD FOREIGN KEY(ID_PROFILE)
REFERENCES PROFILES(ID);

--PATIENTS(EGN, NAME, ADDRESS)
CREATE TABLE PATIENTS(
	EGN CHAR(10) NOT NULL PRIMARY KEY,
	NAME VARCHAR(80),
	ADDRESS VARCHAR(100)
);

--VISIT(PID, EGN, DATE)
CREATE TABLE VISIT(
	EGN CHAR(10) NOT NULL REFERENCES PATIENTS(EGN),
	DOC_PID CHAR(15) NOT NULL REFERENCES DOCTORS(PID),
	VDATE DATE,
	PRIMARY KEY(EGN, DOC_PID)
);

INSERT INTO PROFILES(ID, NAME)
VALUES (1, 'Cardio'),
		(2, 'Neuro');


INSERT INTO DOCTORS(PID, FNAME, LNAME, ROOM, ID_PROFILE)
VALUES ('SK23KAL3M4KJ1M2', 'Ivan', 'Ivanov', 314, 1),
	   ('SK23KAL3M4KJ1M3', 'Petar', 'Ivanov', 312, 1);

INSERT INTO PATIENTS(EGN, NAME, ADDRESS)
VALUES ('9710051871','Petar Petrov','Studgard');

INSERT INTO VISIT(EGN, DOC_PID, VDATE)
VALUES ('9710051871', 'SK23KAL3M4KJ1M2', '2018-04-11');

SELECT PR.NAME AS PRNAME, D.ROOM, PA.NAME AS PANAME, V.VDATE
FROM PROFILES PR, DOCTORS D, PATIENTS PA, VISIT V 
WHERE PR.ID = D.ID_PROFILE
AND D.PID = V.DOC_PID
AND V.EGN = PA.EGN
AND PR.NAME = 'Cardio';

--? CARDIO, 2018-04-11, 2 - DA IZVEDE BROI PACIENTI, POSETILI CARDIOLOGA NA TAZI DATA?
--COUNT(*) - FUNKCIQ ZA BROENE, NO TRQBVA I DA IZPOLZVAME GRUPIRANE
SELECT P.NAME AS PRNAME, V.VDATE, COUNT(*)
FROM PROFILES P, DOCTORS D, VISIT V
WHERE P.ID = D.ID_PROFILE
AND D.PID = V.DOC_PID
GROUP BY P.NAME, V.VDATE;